# OpenSSL root CA configuration file.

# https://jamielinux.com/docs/openssl-certificate-authority/create-the-root-pair.html

# Must set env variable PKI

[ ca ]
# `man ca`
default_ca = CA_default

[ CA_default ]
# Directory and file locations.
dir               = $ENV::PKI
certs             = $dir/certs
crl_dir           = $dir/crl
new_certs_dir     = $dir/newcerts
database          = $dir/index.txt
serial            = $dir/serial
RANDFILE          = $dir/private/.rand

# The root key and root certificate.
private_key       = $dir/private/ca.key.pem
certificate       = $dir/certs/ca.cert.pem

# For certificate revocation lists.
crlnumber         = $dir/crlnumber
crl               = $dir/crl/ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

# SHA-1 is deprecated, so use SHA-2 instead.
default_md        = sha256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = policy_loose

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName             = optional
stateOrProvinceName     = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
# Options for the `req` tool (`man req`).
default_bits        = 2048
distinguished_name  = req_distinguished_name
string_mask         = utf8only

# SHA-1 is deprecated, so use SHA-2 instead.
default_md          = sha256

# Extension to add when the -x509 option is used.
x509_extensions     = v3_root_ca_or_tls

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
0.organizationName              = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

# Optionally, specify some defaults.
countryName_default             = BE
stateOrProvinceName_default     = Flander
localityName_default            = Flander
0.organizationName_default      =
organizationalUnitName_default  =
emailAddress_default            =

# [ new oids]
# customAttributes=1.2.3.4.5.6.7.8.1

[ v3_root_ca_or_tls ]
subjectKeyIdentifier = hash
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign, keyEncipherment
extendedKeyUsage = 2.5.29.37.0
# anyExtendedKeyUsage = 2.5.29.37.0 see http://javadoc.iaik.tugraz.at/iaik_jce/old/iaik/x509/extensions/ExtendedKeyUsage.html

[ v3_leaf_ca ]
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:false
subjectKeyIdentifier = hash
keyUsage = critical, digitalSignature

[ v3_leaf_tls ]
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:false
subjectKeyIdentifier = hash
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth, clientAuth


[ v3_intermediate_ca ]
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
subjectKeyIdentifier = hash
extendedKeyUsage = 2.5.29.37.0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign, keyEncipherment

[ v3_intermediate_tls ]
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
subjectKeyIdentifier = hash
keyUsage = critical, digitalSignature, cRLSign, keyCertSign, keyEncipherment
extendedKeyUsage = serverAuth, clientAuth
